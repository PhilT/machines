# Redirect from www
server {
  server_name www.<%= server_name %>;
  return 301 <%= https_only ? 'https' : '$scheme' %>://<%= server_name %>$request_uri;
}

<% if ssl == 'force' %>
# Redirect from http
server {
  listen 80;
  server_name <%= server_name %>;
  return 301 https://<%= server_name %>$request_uri;
}

<% end %>
server {
  <% unless ssl == 'force' %>
  listen 80;
  <% end %>
  <% if ssl %>
  listen 443;
  <% end %>
  server_name <%= server_name %>;
  root <%= root %>;
  rails_env <%= $conf.environment %>;
  passenger_enabled on;
  add_header  Cache-Control public;             # Ensure browsers cache secure pages

  <% if ssl %>
  ssl on;
  ssl_certificate /usr/local/nginx/conf/<%= ssl_crt %>;
  ssl_certificate_key /usr/local/nginx/conf/<%= ssl_key %>;

  passenger_set_cgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
  passenger_set_cgi_param HTTP_HOST $http_host;
  passenger_set_cgi_param HTTP_X_REAL_IP $remote_addr;
  passenger_set_cgi_param HTTP_X_FORWARDED_PROTO https;
  passenger_set_cgi_param HTTP_X_URL_SCHEME $scheme;

  proxy_redirect    off;
  proxy_max_temp_file_size 0;

  <% end %>
  access_log /var/log/nginx/<%= name %>.access.log main;
  error_log /var/log/nginx/<%= name %>.error.log notice;

  <% if monit_web %>
  location /monit/ {
    rewrite /monit(.*) $1 break;
    proxy_pass http://127.0.0.1:2812;
    proxy_redirect off;
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  <% end %>
  # Cache assets: see http://developer.yahoo.com/performance/rules.html#expires
  location ~ ^/(images|javascripts|stylesheets)/ {
    expires 10y;
  }

  # Rewrite all the requests to the maintenance.html page if it exists.
  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  # Allow images and css in maintenance.html file
  if ($request_filename ~* \.(css|jpg|gif|png)$) {
    break;
  }
  error_page 503 @503;
  location @503 {
    rewrite  ^(.*)$  /system/maintenance.html break;
  }
}

